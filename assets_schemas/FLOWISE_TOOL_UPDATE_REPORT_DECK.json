{
  "name": "TOOL_VTEXER_SHARED",
  "description": "Please prepare variables as per schema. read schema properly. If for an update the user has not specified a particular field then extract it from inputs or share based on your judgment and knowledge\n\ntype : report / deck or update depending on what user wants to do\n\ngenaiAppHeading : Send in sentence case please.\n\ngptUseCase1, 2 and 3 : Innovative and practical use cases for the project ",
  "color": "linear-gradient(rgb(62,233,57), rgb(171,212,60))",
  "iconSrc": "",
  "schema": "[{\"id\":0,\"property\":\"type\",\"description\":\"\",\"type\":\"string\",\"required\":false},{\"id\":1,\"property\":\"genaiAppHeading\",\"description\":\"hort heading up to 10 words. Required when `type` is `update`.\",\"type\":\"string\",\"required\":false},{\"id\":2,\"property\":\"description\",\"description\":\"Detailed description up to 50 words. Required when `type` is `update`.\",\"type\":\"string\",\"required\":false},{\"id\":3,\"property\":\"mainUseCase\",\"description\":\"Main use case up to 50 words. Required when `type` is `update`.\",\"type\":\"string\",\"required\":false},{\"id\":4,\"property\":\"gptUseCase1\",\"description\":\"GPT suggested totally new use case in analytics. Required when `type` is `update`.\",\"type\":\"string\",\"required\":false},{\"id\":5,\"property\":\"gptUseCase2\",\"description\":\"GPT suggested totally new use case in analytics. Required when `type` is `update`.\",\"type\":\"string\",\"required\":false},{\"id\":6,\"property\":\"gptUseCase3\",\"description\":\"GPT suggested totally new use case in analytics. Required when `type` is `update`.\",\"type\":\"string\",\"required\":false},{\"id\":7,\"property\":\"effort\",\"description\":\"enum: [LOW, MEDIUM, HIGH]                       description: Effort level (LOW, MEDIUM, HIGH). Required when `type` is `update`.\",\"type\":\"string\",\"required\":false},{\"id\":8,\"property\":\"cost\",\"description\":\"enum: [LOW, MED, HIGH]                       description: Cost level (LOW, MED, HIGH). Required when `type` is `update`.\",\"type\":\"string\",\"required\":false}]",
  "func": "const fetch = require('node-fetch');\n\nasync function triggerAction(type, data) {\n    const url = 'https://REPLACE-WITH-YOUR-MAKE-WEBHOOK-LOOK-LIKE-BELOW.COM';\n\n  # 'https://hook.us1.make.com/8hiw4awkfi1c1q4lw6iea6pln4z7yokt';\n    const payload = { type, data };\n\n    if (type === 'update') {\n        const requiredFields = ['genaiAppHeading', 'description', 'mainUseCase', 'gptUseCase1', 'gptUseCase2', 'gptUseCase3', 'effort', 'cost'];\n        if (!requiredFields.every(field => data[field])) {\n            throw new Error('Missing required fields for update');\n        }\n    }\n\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(payload)\n        });\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        return await response.text();\n    } catch (error) {\n        console.error('Error:', error);\n        return JSON.stringify({ error: error.message });\n    }\n}\n\n// Usage\nconst type = $type;\nconst data = {\n    genaiAppHeading: $genaiAppHeading,\n    description: $description,\n    mainUseCase: $mainUseCase,\n    gptUseCase1: $gptUseCase1,\n    gptUseCase2: $gptUseCase2,\n    gptUseCase3: $gptUseCase3,\n    effort: $effort,\n    cost: $cost\n};\n\nreturn await triggerAction(type, data);"
}